#!/usr/bin/perl

use strict;
use warnings;
use SOAP::Lite;
use Storable qw(retrieve store);
use Passwd::Keyring::Gnome;

our $VERSION = '0.01';

my $destination = shift;
$destination =~ s/^tel://;

my $url      = 'https://example.org/';
my ($app) = $0 =~ m{.*/(.*)$};

my $keyring = Passwd::Keyring::Gnome->new(
    app   => $app,
    group => "default",
);

my $username = $ENV{USER};

my $password = $keyring->get_password( $username, $app );
unless ($password) {
    $password = get_password( $username, $keyring, $app );
}

my $soap = SOAP::Lite->new();

$soap->proxy( "$url//webdialer/services/WebdialerSoapService70",
    ssl_opts => [ SSL_verify_mode => 0 ] );

my $auth = SOAP::Data->name('in0')->type('urn:Credential')->value(
    \SOAP::Data->value(
        SOAP::Data->name( 'userID'   => $username ),
        SOAP::Data->name( 'password' => $password ),
    )
);

my $cache_file = "$ENV{HOME}/.webdialer.cache";

my $profile;
if ( -e $cache_file && (stat(_))[9] > time-60*60*10 ) {
    $profile = retrieve($cache_file);
}
else {
    $profile = $soap->call( getProfileDetailSoap => $auth )->result;
    my $rc = $profile->{responseCode};
    if ( $rc == 0 ) {
        store $profile, $cache_file;
    }
    elsif ( $rc == 1 ) {
        system( qw(zenity --error --text),
            "Authentifizierungsfehler. Bitte nochmal probieren" );
        $keyring->clear_password( $username, $app );
    }
}

my $device = $profile->{deviceInfoListDetail}->[0]->{deviceName};
my $line   = $profile->{deviceInfoListDetail}->[0]->{lines}->[0];

my $call = $soap->call(
    makeCallSoap => $auth,
    SOAP::Data->name('in1')->type('xsd:string')->value($destination),
    SOAP::Data->name('in2')->type('urn:UserProfile')->value(
        \SOAP::Data->value(
            SOAP::Data->name( 'user'   => $username ),
            SOAP::Data->name( 'deviceName' => $device ),
            SOAP::Data->name( 'lineNumber' => $line ),
        )
    ),
)->result;

if ( $call->{responseCode} == 2 ) {
    system( qw(zenity --error --text),
        "Authentifizierungsfehler. Bitte nochmal probieren" );
    $keyring->clear_password( $username, $app );
}


sub get_password {
    my ( $username, $keyring ) = @_;
    my $password = qx(zenity --password --title "Password for Cisco Webdialer");
    chomp($password);
    my $rc = $? >> 8;
    if ( $rc == 0 ) {
        $keyring->set_password( $username, $password, $app );
        return $password;
    }
    return;
}

__END__

=pod

=head1 NAME

webdialer - make calls via cisco webdialer api

=head1 SYNOPSIS

webdialer TEL_URL|NUMBER

=head1 DESCRIPTION

I<webdialer> uses the CISCO webdialer API to make call. Its first and only
argument should be the telefon number to call. The optional scheme prefix
I<tel:> is removed to make calls by end user applications easier.

=head1 INSTALLATION

The API expects the password of the user. I<webdialer> will prompt the user via
zenity and saves the password in the GNOME Keyring. The following commands
should install all the dependencies on Debian:

  $ apt-get install gnome-keyring libgnome-keyring-dev zenity
  $ cpanm Passwd::Keyring::Gnome

=head1 COPYRIGHT AND LICENSE

Copyright 2015 Mario Domgoergen C<< <mario@domgoergen.com> >>

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.

=cut
